import collections
class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        visited=set(deadends)
        
        if '0000' in visited:
            return -1
        
        graph={
            '0':['1','9'],
            '1':['2','0'],
            '2':['1','3'],
            '3':['2','4'],
            '4':['3','5'],
            '5':['4','6'],
            '6':['7','5'],
            '7':['8','6'],
            '8':['7','9'],
            '9':['8','0']
        }
        que=collections.deque(['0000'])
        level=0
        while que:
            for _ in range(len(que)):
                    cur=que.popleft()
                    if cur == target:
                        return level
                    for i in range(4):
                        for j in graph[cur[i]]:
                            j=cur[:i]+j+cur[i+1:]
                            if j not in visited:
                                visited.add(j)
                                que.append(j)
            level+=1
        return -1
            
        
        
