from collections import defaultdict
class Solution:
    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:
        l1=len(s1)
        l2=len(s2)
        l3=len(s3)
        if l3!=l1+l2:
            return False
        di=defaultdict(str)
        return self.chk(s1,s2,s3,l1,l2,l3,0,0,0,di)
    
        
    def chk(self,str1,str2,str3,l1,l2,l3,p1,p2,p3,di):
        if p3==l3:
            if p1==l1 and p2==l2:
                return True
            else:
                return False
        key=str(p1)+'*'+str(p2)+'*'+str(p3)
        if key in di:
            return di[key]
        
        if p1==l1:
            if str2[p2]==str3[p3]:
                di[key]=self.chk(str1,str2,str3,l1,l2,l3,p1,p2+1,p3+1,di)
                return di[key]
            else:
                di[key]=False
                return di[key]
        if p2==l2:
            if str1[p1]==str3[p3]:
                di[key]=self.chk(str1,str2,str3,l1,l2,l3,p1+1,p2,p3+1,di)
                return di[key]
            else:
                di[key]=False
                return di[key]
        x=False
        y=False
        
        if str1[p1]==str3[p3]:
            x=self.chk(str1,str2,str3,l1,l2,l3,p1+1,p2,p3+1,di)
        if str2[p2]==str3[p3]:
            y=self.chk(str1,str2,str3,l1,l2,l3,p1,p2+1,p3+1,di)
        
        di[key]=x or y
        return di[key]
        
